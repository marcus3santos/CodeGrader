#+Title: Common Lisp Practicum Test
# Folder where the students should store their solutions
#+folder: ~/pt 

** Question 1 :PENALTY 80 :Forbidden (count member)
 
*** What you are asked

Write a function =count-occurrences= that takes an element
and a list as arguments and returns the number of times the element
appears in the list. For example:


#+begin_example
(deftest count-occurrences
  (count-occurrences 3 '(1 2 3 3 3 4)) 3
  (count-occurrences 'a '(a b a c a)) 3
  (count-occurrences 5 '(1 2 3 4)) 0)
#+end_example

#+begin_tcs
(deftest count-occurrences
    (count-occurrences 1 '(1 1 1 1 1)) 5
    (count-occurrences 0 '(1 2 3 4)) 0
    (count-occurrences 'z '(a b c z z)) 2)
#+end_tcs


** Question 2 :PENALTY 80 :Forbidden (count member)
 
*** What you are asked

Write a function =contains-all?= that takes two lists as
arguments and returns =T= if all elements of the first list are
contained in the second list, and =NIL= otherwise.

#+begin_example
(deftest contains-all
  (contains-all? '(1 2) '(1 2 3 4)) t
  (contains-all? '(1 5) '(1 2 3 4)) nil
  (contains-all? '() '(1 2 3)) t)
#+end_example


#+begin_tcs
(deftest contains-all
    (contains-all? '(a b) '(a b c d e)) t
    (contains-all? '(a z) '(a b c d)) nil
    (contains-all? '() '()) t)
#+end_tcs

** Question 3 :PENALTY 80 :Forbidden (count member)

*** What you are asked

Write a function =reverse-list= that takes a list as an
argument and returns a new list that is the reverse of the original
list. 

#+begin_example
(deftest reverse-list
  (reverse-list '(1 2 3 4)) '(4 3 2 1)
  (reverse-list '(a b c)) '(c b a)
  (reverse-list '()) '())
#+end_example

#+begin_tcs
(deftest reverse-list
    (reverse-list '(1 2 3 4 5)) '(5 4 3 2 1)
    (reverse-list '()) '()
    (reverse-list '(a b c)) '(c b a))
#+end_tcs

** Question 4 :PENALTY 80 :Forbidden (count member)

*** What you are asked

Write a function =palindrome?= that takes a list as an
argument and returns =T= if the list is a palindrome (reads the same
forwards and backwards), and =NIL= otherwise. You may not use
=REVERSE= or =NREVERSE=.

#+begin_example
(deftest palindrome
  (palindrome? '(1 2 3 2 1)) t
  (palindrome? '(a b c d)) nil
  (palindrome? '()) t)
#+end_example


#+begin_tcs
(deftest palindrome
    (palindrome? '(x y x)) t
    (palindrome? '(x y z)) nil
    (palindrome? '()) t)
#+end_tcs

